apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

// Load keystore
def keystorePropertiesFile = rootProject.file("../../../vendor/keys/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.katsuna.clock"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        project.ext.set("archivesBaseName", "Clock-" + defaultConfig.versionName)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        signingConfigs {
            katsunaConfig {
                storeFile rootProject.file("../../../vendor/keys/katsuna.keystore")
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }

        release {
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.katsunaConfig

            lintOptions {
                disable 'MissingTranslation'
            }
        }
    }
}

dependencies {
    // App's dependencies, including test
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"
    implementation "com.google.guava:guava:$rootProject.guavaVersion"
    implementation "com.google.code.gson:gson:$rootProject.gson"
    implementation "com.jakewharton.threetenabp:threetenabp:1.1.0"
    implementation "com.google.firebase:firebase-core:$rootProject.firebaseVersion"
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"

    implementation project(':commons')

    // Dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-core:$rootProject.hamcrestVersion"
    testImplementation('org.threeten:threetenbp:1.3.6') {
        exclude module: 'com.jakewharton.threetenabp:threetenabp:1.1.0'
    }

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"

    // UiAutomator Testing
    androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:$rootProject.uiautomatorVersion"
    androidTestImplementation "org.hamcrest:hamcrest-integration:$rootProject.hamcrestVersion"
}

apply plugin: 'com.google.gms.google-services'
